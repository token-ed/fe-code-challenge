{"version":3,"file":"main.c882c2591289f930d328.js","mappings":"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","sources":["webpack://random-company-fe-code-challenge/./src/libs/components/about/about.tsx","webpack://random-company-fe-code-challenge/./src/libs/components/image/image.tsx","webpack://random-company-fe-code-challenge/./src/libs/components/menu/menu.tsx","webpack://random-company-fe-code-challenge/./src/libs/components/loader/loader.tsx","webpack://random-company-fe-code-challenge/./src/libs/components/table/table.tsx","webpack://random-company-fe-code-challenge/./src/logic/use-ajax/interfaces.ts","webpack://random-company-fe-code-challenge/./src/logic/use-ajax/shared.ts","webpack://random-company-fe-code-challenge/./src/logic/use-ajax/use-ajax-actions.ts","webpack://random-company-fe-code-challenge/./src/logic/use-ajax/use-ajax.ts","webpack://random-company-fe-code-challenge/./src/logic/professionals/shared.ts","webpack://random-company-fe-code-challenge/./src/logic/professionals/helpers/use-categories.ts","webpack://random-company-fe-code-challenge/./src/logic/professionals/helpers/use-professionals.ts","webpack://random-company-fe-code-challenge/./src/logic/professionals/helpers/use-state-updater.ts","webpack://random-company-fe-code-challenge/./src/logic/professionals/helpers/use-validations.ts","webpack://random-company-fe-code-challenge/./src/logic/professionals/interfaces.ts","webpack://random-company-fe-code-challenge/./src/logic/professionals/use-data.ts","webpack://random-company-fe-code-challenge/./src/libs/components/form-inputs/dropdown/dropdown.tsx","webpack://random-company-fe-code-challenge/./src/libs/components/form-inputs/text-box/text-box.tsx","webpack://random-company-fe-code-challenge/./src/processes/professionals/form.tsx","webpack://random-company-fe-code-challenge/./src/processes/professionals/search.tsx","webpack://random-company-fe-code-challenge/./src/app/app.tsx","webpack://random-company-fe-code-challenge/./src/app/index.tsx","webpack://random-company-fe-code-challenge/./src/app/app.scss?1d9f","webpack://random-company-fe-code-challenge/./src/libs/components/about/about.scss?2b08","webpack://random-company-fe-code-challenge/./src/libs/components/form-inputs/dropdown/dropdown.scss?9e01","webpack://random-company-fe-code-challenge/./src/libs/components/form-inputs/text-box/text-box.scss?59d9","webpack://random-company-fe-code-challenge/./src/libs/components/loader/loader.scss?e662","webpack://random-company-fe-code-challenge/./src/libs/components/menu/menu.scss?5705","webpack://random-company-fe-code-challenge/./src/libs/components/table/table.scss?3eac","webpack://random-company-fe-code-challenge/./src/processes/professionals/styles.shared.scss?9f55"],"sourcesContent":["import React from \"react\";\nimport css from \"./about.scss\";\n\nexport const About: React.FC = () => (\n  <section className={css.readme}>\n    <h1>FE Code Challenge</h1>\n\n    <h2>Start application</h2>\n    <ul>\n      <li>\n        Clone this repository\n        <pre>\n          <code>git clone</code>\n        </pre>\n      </li>\n      <li>\n        Go into the project directory:\n        <pre>\n          <code>cd fe-code-challenge\\</code>\n        </pre>\n      </li>\n      <li>\n        You will need to install the package{\" \"}\n        <a href=\"https://github.com/typicode/json-server\">json-server</a> as that's the package\n        mimicking the server and where the API is stored (db.json)\n        <pre>\n          <code>npm install json-server</code>\n        </pre>\n      </li>\n      <li>\n        Start the application with:\n        <pre>\n          <code>npm run start</code>\n        </pre>\n      </li>\n      <li>\n        Webpack will start a local server on port 4000, if you have any process running under that\n        port that could be easily overcome by setting a new port in{\" \"}\n        <code>./fe-code-challenge/webpack.dev.config.ts</code>, line 86.\n      </li>\n      <li>\n        Also, please bare in mind that I'm using <em>node-sass</em> package and it requires a\n        download from GitHub, if you're sitting behind a proxy it might be problematic - in this\n        case please follow the recommendations on the error logged in the terminal.\n      </li>\n    </ul>\n\n    <h2>Motivation</h2>\n    <p>\n      This project is part of the recruitment process of Random Company. As suggested by Random\n      Company, I need to fullfil the requirements on the document entitled{\" \"}\n      <em>Front-End Code Challenge</em> in which I need to call an API to get professional\n      categories and descriptions. All the code should be wrapped up in an single page application\n      using React.js library and be written in TypeScript.\n    </p>\n\n    <h2>Getting Started</h2>\n\n    <h3>Overview</h3>\n    <p>This application was built with:</p>\n    <ul>\n      <li>\n        <strong>ReactJs</strong> (library used to build the UI's)\n      </li>\n      <li>\n        <strong>TypeScript</strong> (the strongly-typed style of code)\n      </li>\n      <li>\n        <strong>Webpack</strong> (the bundler with all bundling configurations)\n      </li>\n      <li>\n        <strong>Babel</strong> (the compiler responsible for TypeScript transpilation)\n      </li>\n      <li>\n        Other plugins like loaders (<em>css-loader</em>), Hot Module Replacement plugin or ESLint\n        which supported the fluent development of the app.\n      </li>\n    </ul>\n\n    <h3>Structure</h3>\n    <p>A quick structure explanation on how I would personally set up a project</p>\n    <pre>\n      <code>\n        {`\n        fe-code-challenge/             // Root of the project\n        ├── src/                            // [src] folder holds all the application code\n        │    ├── app                     // [app] folder is where index.tsx (the bundling entry point) sits\n        │    ├── assets                 // [assets] holds all the assets of this application - images, svgs etc would go in here\n        │    ├── libs/                     // [libs] is the folder where generic UI components, HOC's and other reusable UI related stuff goes in\n        │       └──components/     // [components] is pretty much self explanatory, all the reusable UI components go in here\n        │           └──resources      // [resources] folder has all the resources needed  and reused by components sitting in /components\n        │    └── logic/                   // [logic] will hold all the generic logic, generic hooks, api-contract definition types etc\n        │       └── processes/       // [processes] will group all the processes entry-points' components which can be injected (in my case) on React.Router links\n        │\n        └── .../configuration-files             // All the configuration files which drive the application behavior in terms of bundling, building artifacts, module definitions etc.\n        `}\n      </code>\n    </pre>\n\n    <p>\n      As previously described, I usually like to make a clear separation between the logic and\n      presentation layers. In the logic layer, I have my generic hooks or other components that\n      contain reusable and generic functions and behaviors, but only logic-related behaviors, not UI\n      elements. This includes API calls, mapping responses, business-related calculations, and\n      holding Redux or other Flux stores (though I didn't use any of these libraries in this app).\n    </p>\n\n    <h4>./src/logic:</h4>\n    <p>In my case, I have placed the following in this directory:</p>\n    <ul>\n      <li>\n        The API responses typed objects as interfaces (\n        <strong>_/api-contracts/professionals_</strong>): These were generated using an external\n        tool to create TypeScript interfaces based on the \"API contract\" provided in the document.\n        Ideally, we would use proper API contracts from Swagger, for example.\n      </li>\n      <li>\n        All the professionals process logic (<strong>_/professionals_</strong>): This contains all\n        the hooks responsible for calling the APIs, mapping the responses, and validating fields.\n        These hooks expose all the necessary methods to handle form validations, button clicks\n        (submitting and pagination logic), and returning the stateful objects that make the UI\n        components dynamic.\n      </li>\n      <li>\n        A generic `use-ajax` hook: This hook's sole responsibility is to receive props and expose\n        the HTTP methods (<code>get()</code> and <code>post()</code>) for use in the application. It\n        also exposes methods created within a defined inner hook (<code>use-ajax-actions</code>\n        ), which are used to clear AJAX errors or change isLoading in our local state. This\n        implementation may appear a bit verbose, but it is designed to work out of the box and be\n        extremely reusable.\n      </li>\n    </ul>\n\n    <h4>./src/processes:</h4>\n    <p>\n      In the processes directory, I envisioned it serving all the processes in the application. For\n      example, in my case, there will be only one process: <strong>_/professionals_</strong>. This\n      process can have multiple business requirements, but the scope for this app is small. The only\n      function of this process is to present a small _form_ to _search_ for professionals based on a\n      category and a postcode-based location. As such, it includes two presentational components\n      named <code>form.tsx</code> and <code>search.tsx</code>. The search component wraps the form\n      component and calls the <code>useData()</code> hook, which in turn exposes all the methods\n      responsible for the entire behavior in the Professionals Search process.\n    </p>\n    <p>\n      As the application scales, this symbiotic agreement between the <strong>logic</strong> and{\" \"}\n      <strong>presentational</strong> layers can adapt to ongoing changes made by various team\n      members. It's also beneficial to have such a separation, as it allows you to know exactly\n      where to find the logic and presentational components.\n    </p>\n\n    <h4>./src/libs/components:</h4>\n    <p>\n      In this directory, I've placed all the generic components used in this app. Initially, I\n      considered using stable and highly configurable components provided by the frontend community,\n      such as <em>material-ui</em> components or other libraries. However, I decided that creating\n      components from scratch could be a challenging task that would also demonstrate how I build\n      generic components. Some of the generic components created in this app include:\n    </p>\n    <ul>\n      <li>Table</li>\n      <li>Dropdown</li>\n      <li>TextBox</li>\n      <li>Fullpage Loader</li>\n      <li>Navigation Menu</li>\n    </ul>\n    <p>\n      I aimed to keep the application lightweight, so these components are very basic. Towards the\n      end, I had to install a pagination component library due to a lack of time to finish the\n      project.\n    </p>\n\n    <h4>./src/app:</h4>\n    <p>\n      This directory serves the single purpose of holding the entry point for bundling the project\n      and other components that might impact the top level of the hierarchical component tree.\n      Examples include <em>ErrorBoundaries</em>, custom <em>ContextProviders</em>, <em>i18n</em>{\" \"}\n      logic, etc.\n    </p>\n    <p>\n      In my case, I have only the index and `App` components. The index component solely delegates\n      the responsibility of rendering the entire application to `ReactDOM`. The `App` component, on\n      the other hand, provides a `ReactRouter` to navigate through multiple pages within the React\n      SPA. It is at this point that the Search Professionals process is rendered.\n    </p>\n\n    <h2>Testing the application</h2>\n    <p>\n      When the application starts, you should see the About screen where you can read the contents\n      of this exact same README. That is the first page in the ReactRouter switch. The entry point\n      is `/`. You will soon notice the \"Search Professionals\" navigation tab on the menu. Click it\n      to start looking up professionals, navigating to `/search-professionals`. I've aimed to\n      provide a good UX look and feel, making everything intuitive. The design follows the wireframe\n      in the requirements document.\n    </p>\n    <p>Some user actions to be taken into account:</p>\n    <ul>\n      <li>\n        On the Search Professionals page, you can submit your form and navigate through the pages at\n        the bottom of the table (once it is populated with data).\n      </li>\n      <li>\n        Both form fields are validated before you can submit the form or navigate through\n        professionals using the pagination CTA's.\n      </li>\n      <li>\n        If the user changes the professional category, the current state is reset and the\n        professionals table is cleared.\n      </li>\n      <li>\n        If the user changes the postcode, it will be validated when blurring out of the field\n        (postcode is validated against UK postcode pattern)\n      </li>\n      <li>\n        If the postcode is incorrect, the pagination module at the bottom won't be available—the\n        user must fetch the professionals again.\n      </li>\n      <li>\n        The user can navigate to higher page indexes instead of just using the \"previous\" and \"next\"\n        buttons.\n      </li>\n    </ul>\n\n    <h2>Analysis</h2>\n    <p>\n      Throughout the development, I considered many improvements that I wanted to include, but due\n      to time constraints, I couldn't implement everything. Here are some enhancements I thought\n      could be made:\n    </p>\n    <ul>\n      <li>\n        Adding polyfills to provide complete browser compatibility (especially because I'm using{\" \"}\n        <a href=\"https://developer.mozilla.org/pt-BR/docs/Web/API/Fetch_API\">fetch API</a>); (Please\n        use a recent browser for testing the app.)\n      </li>\n      <li>\n        Providing bundling configurations for both development and production environments. This\n        task, while not the most exciting, is essential in a corporate environment (e.g.,\n        obfuscating rules, building rules, bundling, etc.).\n      </li>\n      <li>\n        Establishing strict coding configurations, including:\n        <ul>\n          <li>Adding/excluding linter rules tailored to the company/environment.</li>\n          <li>\n            Setting code formatting rules to avoid conflicts during branch merging to upper\n            environments and ease the CI process\n          </li>\n        </ul>\n      </li>\n      <li>\n        Implementing responsive or adaptive design, which is currently nonexistent in this app.\n      </li>\n      <li>\n        Simplifying some of the types, as they are overengineered and add unnecessary complexity.\n      </li>\n      <li>\n        Adhering to web standards, particularly in generic components, such as accessibility rules\n        and WHATWG standards.\n      </li>\n      <li>\n        Improving error handling for API calls, as network errors (e.g., 500) or API custom errors\n        are not currently handled.\n      </li>\n      <li>\n        Adding unit tests, which was a goal initially but was not realized due to time constraints.\n      </li>\n      <li>\n        Providing good documentation for generic hooks and components in a proper README.md\n        document.\n      </li>\n    </ul>\n\n    <h2>Support</h2>\n    <p>\n      If anything goes wrong with the application or if you have any questions, please feel free to\n      email me, and I'll look into it. Clone the repository, experiment with the code, and don’t\n      hesitate to suggest improvements or ask any questions you may have.\n    </p>\n\n    <h2>Authors</h2>\n    <p>Eduardo Miguel Fernandes</p>\n    <ul>\n      <li>\n        <a href=\"https://github.com/token-ed\">@token-ed</a>\n      </li>\n    </ul>\n\n    <h2>Version History</h2>\n    <ul>\n      <li>\n        2.0.0\n        <ul>\n          <li>FE code challenge</li>\n        </ul>\n      </li>\n    </ul>\n  </section>\n);\n","import React from \"react\";\n\ninterface Props {\n  className?: string;\n  height?: number;\n  src: string;\n  width?: number;\n}\n\nexport const Image: React.FC<Props> = ({ className, height, width, src }) => (\n  <img role=\"img\" className={className} src={src} height={height} width={width} loading=\"lazy\" />\n);\n","import logo from \"@assets/fe-code-challenge.png\";\nimport { Image } from \"@components/image\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport css from \"./menu.scss\";\n\nconst LOGO_WIDTH = 280;\n\nexport const Menu: React.FC = () => {\n  return (\n    <nav className={css.navigation}>\n      <Image className={css.image} src={logo} width={LOGO_WIDTH} />\n      <ul className={css.ul}>\n        <Link to=\"/\">\n          <li>\n            <h5>About</h5>\n          </li>\n        </Link>\n        <Link to=\"/search-professionals\">\n          <li>\n            <h5>Search Professionals</h5>\n          </li>\n        </Link>\n      </ul>\n    </nav>\n  );\n};\n","import loader from \"@assets/loader.gif\";\nimport { Image } from \"@components/image\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport css from \"./loader.scss\";\n\ninterface Props {\n  isLoading?: boolean;\n}\n\nexport const Loader: React.FC<Props> = ({ isLoading }) => {\n  const styles = classNames({ [css.hidden]: !isLoading }, css.container);\n  return (\n    <div className={styles}>\n      <div className={css.loader}>\n        <Image src={loader} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactPaginate, { ReactPaginateProps } from \"react-paginate\";\nimport css from \"./table.scss\";\nexport interface TableProps<HeadData, BodyData> extends ReactPaginateProps {\n    bodyData?: BodyData[];\n    headData: HeadData[];\n    tableClassName?: string;\n}\n\nexport type HeadData = Record<string, unknown>;\nexport type BodyData = Record<string, unknown>;\n\nconst getKey = (item: unknown, index: number) => {\n    return !React.isValidElement(item) ? item.toString() : `${index}`;\n}\n\nexport const Table = <HeadData, BodyData>(props: TableProps<HeadData, BodyData>): JSX.Element => {\n    const {\n        headData,\n        bodyData,\n        tableClassName,\n        onPageChange,\n    } = props;\n\n    if (!headData || !headData.length) return null;\n\n    return (\n        <section className={css.tableContainer}>\n            <table className={tableClassName}>\n                <thead>\n                    <tr>\n                        {headData.map((key, index) => (\n                            <td key={index}>\n                                {key}\n                            </td>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {bodyData?.map((item: BodyData, index: number) =>\n                        <tr key={index}>\n                            {(Object.values(item)).map((value, valueIndex) => (\n                                <td key={getKey(value, valueIndex)}>{value}</td>\n                            ))}\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            {onPageChange && bodyData.length\n                ? <ReactPaginate\n                    previousLabel=\"←\"\n                    nextLabel=\"→\"\n                    containerClassName={css.paginationContainer}\n                    activeClassName={css.paginationLinkActive}\n                    pageClassName={css.pageLi}\n                    pageLinkClassName={css.pageLiLink}\n                    previousClassName={css.previous}\n                    nextLinkClassName={css.nextLink}\n                    previousLinkClassName={css.previousLink}\n                    breakClassName={css.pageLi}\n                    nextClassName={css.next}\n                    breakLinkClassName={css.pageLiLink}\n                    {...props}\n                />\n                : null\n            }\n        </section>\n    );\n};\n","export interface Options {\n  url: string;\n  method: HttpVerb;\n}\n\nexport enum HttpVerb {\n  GET = \"GET\",\n  POST = \"POST\",\n}\n\nexport type UpdateAction = (ajaxState: AjaxState) => void;\n\n// AJAX Params\nexport interface QueryParams<QueryParamsDefinition> {\n  queryParams?: QueryParamsDefinition;\n}\n\nexport interface BodyParams<BodyParamsDefinition> {\n  bodyParams?: BodyParamsDefinition;\n}\n\nexport interface AjaxRequestParams<RequestBodyParams, RequestQueryParams>\n  extends QueryParams<RequestQueryParams>,\n    BodyParams<RequestBodyParams> {}\n\nexport interface AjaxRequest<RequestBodyParams, RequestQueryParams>\n  extends QueryParams<RequestQueryParams>,\n    BodyParams<RequestBodyParams> {\n  method: HttpVerb;\n}\n\nexport interface MapResponse<ApiResponse> {\n  response: ApiResponse;\n  httpResponse: Response;\n  request: AjaxRequest<Record<string, unknown>, URLSearchParams>;\n}\n\n// AJAX errors\nexport interface AjaxError {\n  ajaxError?: unknown;\n}\n\n// AJAX network errors\nexport interface AjaxServerErrors {\n  ajaxServerErrors?: ServerErrorsDefinitions[];\n}\n\nexport interface ServerErrorsDefinitions {\n  errorCode: string;\n  validationErrorField: string;\n  validationErrorMessage: string;\n  vaidationErrorTitle: string;\n}\n\nexport interface ErrorObject {\n  response?: Response;\n  error: Error;\n}\n\n// AJAX Loading\nexport interface AjaxLoading {\n  isLoading?: boolean;\n}\n\n// AJAX custom actions\nexport interface AjaxActions {\n  clearErrors?: () => void;\n  setLoading?: (isLoading: boolean) => void;\n}\n\nexport type AjaxState = AjaxError & AjaxServerErrors & AjaxLoading & AjaxActions;\n","import { AjaxRequest, AjaxState, ErrorObject, ServerErrorsDefinitions } from \"./interfaces\";\nimport { AjaxCommonProps, AjaxResponse, FetchRequest, MappedResponse } from \"./use-ajax\";\n\ninterface MyRequest<\n  ApiResponse,\n  Response extends AjaxResponse,\n  BodyParams extends Record<string, unknown>,\n  QueryParams extends URLSearchParams,\n> extends FetchRequest<ApiResponse, Response>,\n    AjaxRequest<BodyParams, QueryParams>,\n    AjaxCommonProps {}\n\nconst getOptions = <ApiResponse, Response extends AjaxResponse>(\n  request: MyRequest<ApiResponse, Response, Record<string, unknown>, URLSearchParams>\n) => {\n  const { headers = new Headers(), method, contentType, acceptLanguage, bodyParams } = request;\n\n  //   headers.set(\"Access-Control-Allow-Headers\", `content-type x-total-count`);\n\n  if (contentType) {\n    headers.set(\"Content-Type\", contentType);\n  }\n\n  if (acceptLanguage) {\n    headers.set(\"Accept-Language\", acceptLanguage);\n  }\n\n  const operation: RequestInit = {\n    headers,\n    method,\n  };\n\n  if (bodyParams) {\n    operation.body = JSON.stringify(bodyParams);\n  }\n\n  return operation;\n};\n\nasync function execute<ApiResponse, Response extends AjaxResponse>(\n  request: MyRequest<ApiResponse, Response, Record<string, unknown>, URLSearchParams>\n) {\n  if (!request || !request.endpoint) {\n    return null;\n  }\n\n  try {\n    const options = getOptions(request);\n    const queryParams = new URLSearchParams(request.queryParams);\n\n    const response = await fetch(`${request.endpoint}?${queryParams}`, options);\n\n    if (!response.ok) {\n      throw {\n        errorHandled: new Error(response.statusText),\n        response,\n      };\n    }\n\n    return response;\n  } catch (error) {\n    if (error & error.errorHandled) {\n      throw {\n        error: error.errorHandled,\n        response: error.response,\n      };\n    }\n\n    const errorResponse: ErrorObject = {\n      error,\n    };\n\n    throw errorResponse;\n  }\n}\n\nexport async function parseResponse<ApiResponse, MyResponse extends AjaxResponse>(\n  request: MyRequest<ApiResponse, MyResponse, Record<string, unknown>, URLSearchParams>,\n  response: Response\n): Promise<MyResponse> {\n  if (!response) {\n    return null;\n  }\n\n  let ajaxState: AjaxState = {\n    isLoading: false,\n  };\n\n  let json: MappedResponse<MyResponse> = null;\n\n  try {\n    // Mining response JSON\n    const text = await response.text();\n    const data = (text && JSON.parse(text)) || null;\n\n    // Mining response errors\n    const errors: ServerErrorsDefinitions[] = (data && data.errors) || [];\n\n    ajaxState = {\n      ...ajaxState,\n      ajaxServerErrors: errors,\n    };\n\n    if (request) {\n      json = request.mapResponse({\n        httpResponse: response,\n        request,\n        response: data,\n      });\n    }\n  } catch (error) {\n    throw { error, response };\n  }\n\n  const fullResponse = {\n    ajaxState,\n    ...(json as Record<string, unknown>),\n  };\n\n  return fullResponse as MyResponse;\n}\n\nexport async function fetchRequest<ApiResponse, Response extends AjaxResponse>(\n  request: MyRequest<ApiResponse, Response, Record<string, unknown>, URLSearchParams>\n): Promise<Response> {\n  const myFetch = async () => {\n    const response = await execute(request);\n\n    const ajaxState = await parseResponse(request, response);\n\n    return { rawResponse: response, ajaxState };\n  };\n\n  try {\n    const fetchPromise = myFetch();\n    const response = await fetchPromise;\n\n    return response.ajaxState;\n  } catch (error) {\n    const ajaxState: AjaxState = {\n      ajaxError: error,\n      ajaxServerErrors: [],\n      isLoading: false,\n    };\n\n    throw { ...ajaxState };\n  }\n}\n","import { AjaxActions, AjaxState, UpdateAction } from \"./interfaces\";\n\nexport const cleanState: AjaxState = {\n    ajaxServerErrors: [],\n    isLoading: false,\n}\n\nexport const useAjaxActions = (setAjaxState: UpdateAction): AjaxActions => {\n    const updateState = (state: Partial<AjaxState>) => {\n        if (!setAjaxState) {\n            return;\n        }\n\n        setAjaxState({ ...cleanState, ...state });\n    }\n\n    const setLoading = (isLoading: boolean) => {\n        updateState({ isLoading });\n    }\n\n    const clearErrors = () => {\n        updateState({});\n    }\n\n    return {\n        clearErrors,\n        setLoading,\n    }\n}","import { useCallback, useMemo } from \"react\";\nimport {\n  AjaxActions,\n  AjaxRequestParams,\n  AjaxState,\n  HttpVerb,\n  MapResponse,\n  UpdateAction,\n} from \"./interfaces\";\nimport { fetchRequest } from \"./shared\";\nimport { useAjaxActions } from \"./use-ajax-actions\";\n\nexport interface AjaxResponse {\n  ajaxState: AjaxState;\n}\n\nexport interface AjaxRequestEndpoint {\n  endpoint: string;\n}\n\nexport interface AjaxCommonProps {\n  headers?: Headers;\n  contentType?: ContentType;\n  acceptLanguage?: string;\n}\n\nexport enum ContentType {\n  JSON = \"application/json\",\n  Text = \"text/plain\",\n}\n\ntype StateExcluded<Response extends AjaxResponse> = Pick<\n  Response,\n  Exclude<keyof Response, \"ajaxState\">\n>;\n\nexport type MappedResponse<Response extends AjaxResponse> = StateExcluded<Response>;\n\nexport interface FetchRequest<ApiResponse, CustomResponse extends AjaxResponse>\n  extends AjaxRequestEndpoint,\n    AjaxCommonProps,\n    Partial<Headers> {\n  mapResponse: (map: MapResponse<ApiResponse>) => MappedResponse<CustomResponse>;\n}\n\nexport interface AjaxProps<ApiResponse, Response extends AjaxResponse>\n  extends FetchRequest<ApiResponse, Response> {\n  onAjaxStateUpdate: UpdateAction;\n}\n\nexport interface AjaxHook<Response extends AjaxResponse> extends AjaxActions {\n  get: <QueryParams>(params?: { queryParams: QueryParams; headers?: Headers }) => Promise<Response>;\n  post: <QueryParams, BodyParams>(\n    params?: AjaxRequestParams<BodyParams, QueryParams>,\n    headers?: Headers\n  ) => Promise<Response>;\n  // Other HTTP verbs can be defined as application scales (for example PUT or DELETE)\n}\n\nexport function useAjax<ApiResponse, Response extends AjaxResponse>(\n  props: AjaxProps<ApiResponse, Response>\n): AjaxHook<Response> {\n  const ajaxActions = useAjaxActions(props.onAjaxStateUpdate);\n\n  const performRequest = useCallback(\n    async (\n      method: HttpVerb,\n      params: AjaxRequestParams<Record<string, unknown>, URLSearchParams>,\n      customHeaders: Headers\n    ): Promise<AjaxResponse> => {\n      try {\n        const response = await fetchRequest({\n          ...props,\n          method,\n          bodyParams: params?.bodyParams,\n          queryParams: params?.queryParams,\n          headers: customHeaders,\n        });\n\n        return { ...response, ajaxState: { ...response?.ajaxState, ...ajaxActions } };\n      } catch (ajaxState) {\n        throw {\n          ...ajaxState,\n          ...ajaxActions,\n        };\n      }\n    },\n    [ajaxActions, props]\n  );\n\n  const ajaxHook = useMemo(\n    () => ({\n      get: performRequest.bind(null, HttpVerb.GET),\n      post: performRequest.bind(null, HttpVerb.POST),\n      ...ajaxActions,\n    }),\n    [ajaxActions, performRequest]\n  );\n\n  return ajaxHook as AjaxHook<Response>;\n}\n","export const CATEGORIES_ENDPOINT = `https://my-json-server.typicode.com/token-ed/fe-code-challenge/categories`;\n\nexport const PROFESSIONALS_ENDPOINT =\n  \"https://my-json-server.typicode.com/token-ed/fe-code-challenge/professionals\";\n","import { ApiCategory } from \"@logic/api-contracts/professionals\";\nimport { AjaxState, MapResponse } from \"@logic/use-ajax/interfaces\";\nimport { ContentType, MappedResponse, useAjax } from \"@logic/use-ajax/use-ajax\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Category, GetCategoriesResponse } from \"../interfaces\";\nimport { CATEGORIES_ENDPOINT } from \"../shared\";\n\ninterface UseCategoriesHook {\n  ajaxState: AjaxState;\n  categories: Category[];\n}\n\nconst compareCategoriesNames = (categoryA: ApiCategory, categoryB: ApiCategory) => {\n  if (categoryA.designation < categoryB.designation) {\n    return -1;\n  }\n\n  if (categoryA.designation > categoryB.designation) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst mapResponse = (map: MapResponse<ApiCategory[]>): MappedResponse<GetCategoriesResponse> => {\n  const { response } = map;\n\n  if (!response || !response.length) return null;\n\n  return {\n    categories: response.filter((category) => !category.concealed).sort(compareCategoriesNames),\n  };\n};\n\nexport const useCategories = (): UseCategoriesHook => {\n  const [ajaxState, setAjaxState] = useState<AjaxState>({ isLoading: true });\n  const [categories, setCategories] = useState<Category[]>(null);\n\n  const ajax = useAjax({\n    endpoint: CATEGORIES_ENDPOINT,\n    mapResponse,\n    onAjaxStateUpdate: setAjaxState,\n    contentType: ContentType.Text,\n  });\n\n  const getCategories = useCallback(() => {\n    try {\n      // setTimeout used purely for better experience since the response is settled instantly.\n      // the loader rendered in the presentational component will be shown for 0,5 seconds.\n      setTimeout(async () => {\n        const response = await ajax.get();\n\n        const { categories } = response;\n\n        setCategories(categories);\n\n        ajax.setLoading(false);\n      }, 500);\n    } catch (error) {\n      throw error;\n    }\n  }, [ajax]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => getCategories(), []);\n\n  return {\n    ajaxState,\n    categories,\n  };\n};\n","import { ApiProfessionals } from \"@logic/api-contracts/professionals/professionals\";\nimport { AjaxState, MapResponse } from \"@logic/use-ajax/interfaces\";\nimport { ContentType, MappedResponse, useAjax } from \"@logic/use-ajax/use-ajax\";\nimport { useCallback, useState } from \"react\";\nimport { GetProfessionalsResponse, Professional, ProfessionalsWithPagination } from \"../interfaces\";\nimport { PROFESSIONALS_ENDPOINT } from \"../shared\";\n\ninterface UseProfessionalsHook {\n  ajaxState: AjaxState;\n  getProfessionals: (categoryId: number, location: string, currentPage?: number) => Promise<void>;\n  professionalsWithPagination: ProfessionalsWithPagination;\n  resetProfessionals: () => void;\n}\n\nconst ENTRIES_PER_PAGE = 5;\nconst START_QUERYPARAM = \"_start\";\nconst LIMIT_QUERYPARAM = \"_limit\";\n\nconst mapResponse = (\n  map: MapResponse<ApiProfessionals[]>\n): MappedResponse<GetProfessionalsResponse> => {\n  const { response, httpResponse } = map;\n  if (!response || !response.length || !httpResponse) return null;\n\n  return {\n    professionals: response.map(\n      (pro): Professional => ({\n        id: pro.id,\n        name: pro.name,\n        postCode: pro.address?.postcode,\n        reviewRating: pro.rating,\n      })\n    ),\n  };\n};\n\nexport const useProfessionals = (): UseProfessionalsHook => {\n  const [ajaxState, setAjaxState] = useState<AjaxState>({ isLoading: false });\n  const [professionalsWithPagination, setProfessionalsWithPagination] =\n    useState<ProfessionalsWithPagination>();\n\n  const ajax = useAjax({\n    endpoint: PROFESSIONALS_ENDPOINT,\n    mapResponse,\n    onAjaxStateUpdate: setAjaxState,\n    contentType: ContentType.JSON,\n  });\n\n  const getProfessionals = useCallback(\n    async (categoryId: number, location: string, currentPage = 1) => {\n      try {\n        ajax.setLoading(true);\n\n        const entriesStartValue = currentPage === 1 ? 0 : currentPage * ENTRIES_PER_PAGE;\n\n        // setTimeout used purely for better experience since the response is settled instantly.\n        // the loader rendered in the presentational component will be shown for 1 second.\n        setTimeout(async () => {\n          const response = await ajax.get({\n            queryParams: {\n              [START_QUERYPARAM]: entriesStartValue,\n              [LIMIT_QUERYPARAM]: ENTRIES_PER_PAGE,\n            },\n          });\n          const { professionals: professionalsResponse } = response;\n\n          const professionalsWithPagination: ProfessionalsWithPagination = {\n            professionals: professionalsResponse,\n            // json-server does not return any headers or information about the length of records for professionals so we will assume the length is 16 (db.json)\n            totalPages: Math.floor(16 / ENTRIES_PER_PAGE),\n          };\n\n          setProfessionalsWithPagination(professionalsWithPagination);\n\n          ajax.setLoading(false);\n        }, 1000);\n      } catch (error) {\n        ajax.setLoading(false);\n        throw error;\n      }\n    },\n    [ajax]\n  );\n\n  const resetProfessionals = useCallback(() => {\n    setProfessionalsWithPagination({});\n  }, []);\n\n  return {\n    ajaxState,\n    getProfessionals,\n    professionalsWithPagination,\n    resetProfessionals,\n  };\n};\n","import { useCallback } from \"react\";\nimport { StateUpdaterProps } from \"../interfaces\";\n\ninterface UseStateUpdaterHook {\n    setCategory: (value: string) => void;\n    setPostcode: (postCode: string) => void;\n}\n\nconst onlyNumbersAndLettersRegex = /^[a-zA-Z0-9 ]*$/;\n\nexport const useStateUpdater = ({ state, setState }: StateUpdaterProps): UseStateUpdaterHook => {\n    const setCategory = useCallback((value: string) => {\n        const castedCategoryId = parseInt(value);\n\n        if (!isNaN(castedCategoryId)) {\n            setState({ ...state, categoryId: castedCategoryId });\n        }\n\n    }, [setState, state])\n\n    const setPostcode = useCallback((postCode: string) => {\n        if (onlyNumbersAndLettersRegex.test(postCode))\n            setState({ ...state, postCode: postCode.toUpperCase() });\n    }, [setState, state])\n\n    return {\n        setPostcode,\n        setCategory,\n    }\n};","import { useCallback } from \"react\";\nimport { StateUpdaterProps } from \"../interfaces\";\n\nconst ukPostCodeRegex = /^(([A-Z]{1,2}[0-9][A-Z0-9]?|ASCN|STHL|TDCU|BBND|[BFS]IQQ|PCRN|TKCA) ?[0-9][A-Z]{2}|BFPO ?[0-9]{1,4}|(KY[0-9]|MSR|VG|AI)[ -]?[0-9]{4}|[A-Z]{2} ?[0-9]{2}|GE ?CX|GIR ?0A{2}|SAN ?TA1)$/i;\n\nexport interface Validations {\n    isPostCodeValid?: boolean\n    isCategoryIdValid?: boolean;\n}\n\nexport interface UseValidationsHook {\n    validateCategory: () => boolean;\n    validatePostcode: () => boolean;\n}\n\nexport const useValidations = ({ state, setState }: StateUpdaterProps): UseValidationsHook => {\n    const { categoryId, postCode } = state;\n\n    const categoryIsValid = useCallback((): boolean => {\n        return !!categoryId && categoryId > 0;\n    }, [categoryId])\n\n    const postCodeIsValid = useCallback((): boolean => {\n        return !!postCode && ukPostCodeRegex.test(postCode);\n    }, [postCode])\n\n    const validateCategory = useCallback(() => {\n        const isValid = categoryIsValid();\n\n        if (isValid) {\n            setState((prevState) => { return { ...prevState, isCategoryIdValid: true } });\n        } else {\n            setState(prevState => { return { ...prevState, isCategoryIdValid: false } });\n        }\n\n        return isValid;\n    }, [categoryIsValid, setState])\n\n    const validatePostcode = useCallback(() => {\n        const isValid = postCodeIsValid();\n\n        if (isValid) {\n            setState(prevState => { return { ...prevState, isPostCodeValid: true } });\n        } else {\n            setState(prevState => { return { ...prevState, isPostCodeValid: false } });\n        }\n\n        return isValid;\n    }, [postCodeIsValid, setState])\n\n    return {\n        validateCategory,\n        validatePostcode,\n    }\n};","import React from \"react\";\nimport { AjaxResponse } from \"../use-ajax/use-ajax\";\nimport { Validations } from \"./helpers/use-validations\";\n\nexport interface GetCategoriesResponse extends AjaxResponse {\n  categories: Category[];\n}\n\nexport interface Category {\n  id: number;\n  designation: string;\n  concealed: boolean;\n}\n\nexport interface GetProfessionalsResponse extends AjaxResponse {\n  professionals: Professional[];\n}\n\nexport interface ProfessionalsWithPagination {\n  professionals?: Professional[];\n  totalPages?: number;\n}\n\nexport interface Professional {\n  id: number;\n  name: string;\n  postCode: string;\n  reviewRating?: number;\n}\n\nexport interface InputFields extends Validations {\n  categoryId: number;\n  postCode: string;\n}\n\nexport interface InputFieldsActions {\n  setState?: React.Dispatch<React.SetStateAction<InputFields>>;\n}\n\nexport interface InputFieldsState {\n  state: InputFields;\n}\n\nexport type StateUpdaterProps = InputFieldsActions & InputFieldsState;\n\nexport const initialState: InputFields = {\n  categoryId: null,\n  postCode: \"\",\n  isCategoryIdValid: null,\n  isPostCodeValid: null,\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport { useCategories } from \"./helpers/use-categories\";\nimport { useProfessionals } from \"./helpers/use-professionals\";\nimport { useStateUpdater } from \"./helpers/use-state-updater\";\nimport { useValidations } from \"./helpers/use-validations\";\nimport { initialState, InputFields } from \"./interfaces\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useData = () => {\n    const [inputState, setInputState] = useState<InputFields>(initialState);\n\n    const { ajaxState: categoriesAjaxState, categories } = useCategories();\n\n    const {\n        ajaxState: professionalsAjaxState,\n        professionalsWithPagination,\n        getProfessionals,\n        resetProfessionals,\n    } = useProfessionals();\n\n    const validations = useValidations({\n        state: inputState,\n        setState: setInputState,\n    });\n\n    const handlers = useStateUpdater({\n        state: inputState,\n        setState: setInputState,\n    });\n\n    const isDataValid = useMemo(() => {\n        const { isCategoryIdValid, isPostCodeValid } = inputState;\n        return isCategoryIdValid && isPostCodeValid;\n    }, [inputState])\n\n    const onSubmit = useCallback(() => {\n        if (isDataValid)\n            getProfessionals(inputState.categoryId, inputState.postCode.toLowerCase());\n    }, [getProfessionals, inputState.categoryId, inputState.postCode, isDataValid])\n\n    const onPageChange = useCallback((currentPage?: number) => {\n        if (isDataValid)\n            getProfessionals(inputState.categoryId, inputState.postCode.toLowerCase(), currentPage);\n    }, [getProfessionals, inputState.categoryId, inputState.postCode, isDataValid])\n\n    return {\n        categoriesAjaxState,\n        professionalsAjaxState,\n        categories,\n        professionalsWithPagination,\n        onSubmit,\n        onPageChange,\n        resetProfessionals,\n        ...validations,\n        ...handlers,\n        ...inputState,\n    }\n}","import classnames from \"classnames\";\nimport React, { memo, SyntheticEvent, useCallback, useMemo } from \"react\";\nimport css from \"./dropdown.scss\";\n\nexport interface Option {\n    label: React.ReactNode;\n    value: string | number;\n}\n\nexport interface DropdownProps {\n    className?: string;\n    id: string;\n    isValid?: boolean;\n    label: React.ReactNode;\n    name?: string;\n    onBlur?: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n    onSelect?: (value: string) => void;\n    options?: Option[];\n    selected: number | string;\n}\n\nexport const Dropdown: React.FC<DropdownProps> = memo(({\n    className,\n    id,\n    label,\n    name,\n    onBlur,\n    onSelect,\n    options,\n    selected,\n    isValid,\n}) => {\n    const containerStyles = classnames(className, css.dropdownContainer);\n    const selectStyles = classnames(css.select, { [css.selectNotValid]: isValid === false });\n\n    const handleSelect = useCallback((event: SyntheticEvent<HTMLSelectElement, Event>) => {\n        if (event) {\n            const { currentTarget } = event;\n\n            onSelect(currentTarget.value);\n        }\n    }, [onSelect]);\n\n    const selectedItem = useMemo(() => {\n        const current = options?.find(option => option.value === selected);\n        if (current) return current.value;\n    }, [options, selected])\n\n    const items = options?.map(\n        option =>\n            <option value={option.value} key={option.value}>{option.label}</option>\n    );\n\n    if (items && !selectedItem) items.unshift(<option value={0} key=\"0\">Choose Category</option>)\n\n    return (\n        <div className={containerStyles}>\n            <label htmlFor={id} className={css.label}>{label}</label>\n            <select\n                className={selectStyles}\n                name={name}\n                id={id}\n                value={selectedItem}\n                onChange={handleSelect}\n                onBlur={onBlur}\n            >\n                {items}\n            </select>\n        </div>\n    )\n});\n\nDropdown.displayName = \"Dropdown\";","import classnames from \"classnames\";\nimport React from \"react\";\nimport css from \"./text-box.scss\";\n\nexport interface TextBoxProps {\n    id?: string;\n    isValid?: boolean;\n    label?: string;\n    maxLength?: number;\n    onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    value: string;\n    className?: string;\n}\n\nexport const TextBox: React.FC<TextBoxProps> = ({\n    id,\n    isValid,\n    maxLength,\n    className,\n    label,\n    onChange,\n    value,\n    onBlur\n}) => {\n    const inputStyles = classnames(css.input, { [css.inputNotValid]: isValid === false });\n\n    return (\n        <div className={classnames(className, css.textBoxContainer)}>\n            <label htmlFor={id} className={css.label}>\n                {label}\n            </label>\n            <input\n                id={id}\n                className={inputStyles}\n                maxLength={maxLength}\n                onChange={onChange}\n                value={value}\n                onBlur={onBlur}\n            />\n        </div>\n    )\n};\n","import { Dropdown, DropdownProps } from \"@components/form-inputs/dropdown\";\nimport { TextBox, TextBoxProps } from \"@components/form-inputs/text-box\";\nimport { UseValidationsHook } from \"@logic/professionals/helpers/use-validations\";\nimport { InputFields } from \"@logic/professionals/interfaces\";\nimport React from \"react\";\nimport css from \"./styles.shared.scss\";\n\ninterface Props extends\n    Pick<DropdownProps, \"options\" | \"onSelect\">,\n    Pick<TextBoxProps, \"onChange\" | \"maxLength\">,\n    UseValidationsHook,\n    InputFields {\n    onSubmit: () => void;\n}\n\nexport const Form: React.FC<Props> = ({\n    maxLength,\n    onChange,\n    onSelect,\n    onSubmit,\n    options,\n    categoryId,\n    postCode,\n    isCategoryIdValid,\n    isPostCodeValid,\n    validateCategory,\n    validatePostcode,\n}) => {\n\n    const handleOnSubmit = (event) => {\n        event.preventDefault();\n        validatePostcode();\n        validateCategory();\n        onSubmit();\n    }\n\n    const handleOnPostcodeBlur = () => {\n        validatePostcode();\n    }\n\n    const handleOnCategoryBlur = () => {\n        validateCategory();\n    }\n\n    const handleOnSelect = (value: string) => {\n        onSelect(value);\n    }\n\n    return (\n        <form className={css.formContainer} onSubmit={handleOnSubmit}>\n            <Dropdown\n                id=\"category-dropdown\"\n                isValid={isCategoryIdValid}\n                label=\"Category\"\n                name=\"categories\"\n                onSelect={handleOnSelect}\n                options={options}\n                selected={categoryId}\n                onBlur={handleOnCategoryBlur}\n                className={css.dropdown}\n            />\n            <TextBox\n                id=\"postcode-text-box\"\n                isValid={isPostCodeValid}\n                label=\"Postcode\"\n                maxLength={maxLength}\n                onBlur={handleOnPostcodeBlur}\n                onChange={onChange}\n                value={postCode}\n                className={css.textBox}\n            />\n            <button className={css.button} type=\"submit\">Submit</button>\n        </form>\n    );\n};","import { Option } from \"@components/form-inputs/dropdown\";\nimport { Loader } from \"@components/loader/loader\";\nimport { Table } from \"@components/table/table\";\nimport { Professional } from \"@logic/professionals/interfaces\";\nimport { useData } from \"@logic/professionals/use-data\";\nimport React, { useCallback, useMemo } from \"react\";\nimport ReactStars from \"react-stars\";\nimport { Form } from \"./form\";\nimport css from \"./styles.shared.scss\";\ninterface Props {\n  prop?: string;\n}\n\ninterface ReviewRatingType extends Professional {\n  reviewRatingComponent?: React.ReactNode;\n}\n\nconst TABLE_HEAD_DATA = [\"Id\", \"Name\", \"Postcode\", \"Review Rating\"];\nconst PAGE_RANGE_DISPLAYED = 8;\nconst MARGIN_PAGES = 0;\n\nexport const Search: React.FC<Props> = () => {\n  const {\n    categories,\n    categoriesAjaxState,\n    categoryId,\n    isCategoryIdValid,\n    isPostCodeValid,\n    onSubmit,\n    onPageChange,\n    postCode,\n    professionalsAjaxState,\n    professionalsWithPagination,\n    resetProfessionals,\n    setCategory,\n    setPostcode,\n    validateCategory,\n    validatePostcode,\n  } = useData();\n\n  const inputFieldsAreValid = isCategoryIdValid && isPostCodeValid;\n\n  const handleSetCategory = (value: string) => {\n    setCategory(value);\n    resetProfessionals();\n  };\n\n  const handleSetPostcode = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPostcode(event.target.value);\n    },\n    [setPostcode]\n  );\n\n  const handleOnSubmit = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handlePageChange = useCallback(\n    (selectedItem: { selected: number }) => {\n      if (!selectedItem) return null;\n      onPageChange(selectedItem.selected + 1);\n    },\n    [onPageChange]\n  );\n\n  const mappedCategories = useMemo(() => {\n    const options: Option[] = categories?.map((category) => ({\n      label: category.designation,\n      value: category.id,\n    }));\n\n    return options;\n  }, [categories]);\n\n  const mappedProsWithReviewRatingComponent = useMemo(() => {\n    const professionalsAux =\n      professionalsWithPagination && professionalsWithPagination.professionals\n        ? [...professionalsWithPagination.professionals]\n        : [];\n\n    const prosWithReviewRating = professionalsAux?.map((proAux): ReviewRatingType => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { reviewRating, ...rest } = proAux;\n\n      return {\n        ...rest,\n        reviewRatingComponent: (\n          <ReactStars\n            count={5}\n            edit={false}\n            size={24}\n            value={Math.round(proAux.reviewRating)}\n            className={css.stars}\n          />\n        ),\n      };\n    });\n    return prosWithReviewRating;\n  }, [professionalsWithPagination]);\n\n  return (\n    <>\n      <Loader isLoading={categoriesAjaxState.isLoading || professionalsAjaxState.isLoading} />\n      <section className={css.searchContainer}>\n        <Form\n          maxLength={8}\n          onChange={handleSetPostcode}\n          onSelect={handleSetCategory}\n          onSubmit={handleOnSubmit}\n          options={mappedCategories}\n          categoryId={categoryId}\n          postCode={postCode}\n          isCategoryIdValid={isCategoryIdValid}\n          isPostCodeValid={isPostCodeValid}\n          validateCategory={validateCategory}\n          validatePostcode={validatePostcode}\n        />\n        <Table\n          headData={TABLE_HEAD_DATA}\n          bodyData={mappedProsWithReviewRatingComponent}\n          pageCount={professionalsWithPagination?.totalPages || 0}\n          onPageChange={inputFieldsAreValid && handlePageChange}\n          disableInitialCallback={true}\n          pageRangeDisplayed={PAGE_RANGE_DISPLAYED}\n          marginPagesDisplayed={MARGIN_PAGES}\n        />\n      </section>\n    </>\n  );\n};\n","import { About } from \"@components/about/about\";\nimport { Menu } from \"@components/menu/menu\";\nimport { Search } from \"@processes/professionals\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport css from \"./app.scss\";\n\nexport const App: React.FC = () => (\n    <Router>\n        <div className={css.container}>\n            <Menu />\n            <Switch>\n                <Route path=\"/\" exact component={About} />\n                <Route path=\"/search-professionals\" component={Search} />\n            </Switch>\n        </div>\n    </Router>\n\n)","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"app_container_Orjb4y\"};\n    if(module.hot) {\n      // 1721516381715\n      var cssReload = require(\"/home/ed/git/fe-code-challenge/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// extracted by mini-css-extract-plugin\nexport default {\"readme\":\"about_readme_ORbM-o\"};\n    if(module.hot) {\n      // 1721516381719\n      var cssReload = require(\"/home/ed/git/fe-code-challenge/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// extracted by mini-css-extract-plugin\nexport default {\"dropdown-container\":\"dropdown_dropdown-container_kEzcR2\",\"dropdownContainer\":\"dropdown_dropdown-container_kEzcR2\",\"label\":\"dropdown_label_ozX28L\",\"select\":\"dropdown_select_KgwDMq\",\"select-not-valid\":\"dropdown_select-not-valid_p6wpDg\",\"selectNotValid\":\"dropdown_select-not-valid_p6wpDg\"};\n    if(module.hot) {\n      // 1721516381725\n      var cssReload = require(\"/home/ed/git/fe-code-challenge/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// extracted by mini-css-extract-plugin\nexport default {\"text-box-container\":\"text-box_text-box-container_bRMQSd\",\"textBoxContainer\":\"text-box_text-box-container_bRMQSd\",\"label\":\"text-box_label_NjB3lJ\",\"input\":\"text-box_input_l-qJhA\",\"input-not-valid\":\"text-box_input-not-valid_ukwO66\",\"inputNotValid\":\"text-box_input-not-valid_ukwO66\"};\n    if(module.hot) {\n      // 1721516381728\n      var cssReload = require(\"/home/ed/git/fe-code-challenge/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"loader_container_IXtUEA\",\"hidden\":\"loader_hidden_GS6IcV\",\"loader\":\"loader_loader_i3DjbT\"};\n    if(module.hot) {\n      // 1721516381735\n      var cssReload = require(\"/home/ed/git/fe-code-challenge/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// extracted by mini-css-extract-plugin\nexport default {\"navigation\":\"menu_navigation_axMOEL\",\"image\":\"menu_image_1npch3\",\"ul\":\"menu_ul_HdLY6v\"};\n    if(module.hot) {\n      // 1721516381730\n      var cssReload = require(\"/home/ed/git/fe-code-challenge/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// extracted by mini-css-extract-plugin\nexport default {\"table-container\":\"table_table-container_IHZOj+\",\"tableContainer\":\"table_table-container_IHZOj+\",\"pagination-container\":\"table_pagination-container_jpVd5N\",\"paginationContainer\":\"table_pagination-container_jpVd5N\",\"pagination-link-active\":\"table_pagination-link-active_M4HZoF\",\"paginationLinkActive\":\"table_pagination-link-active_M4HZoF\",\"previous\":\"table_previous_4JeWwD\",\"next\":\"table_next_203wbc\",\"next-link\":\"table_next-link_ZR+j7K\",\"nextLink\":\"table_next-link_ZR+j7K\",\"previous-link\":\"table_previous-link_lwmwbT\",\"previousLink\":\"table_previous-link_lwmwbT\",\"page-li\":\"table_page-li_kE+Cu6\",\"pageLi\":\"table_page-li_kE+Cu6\",\"page-li-link\":\"table_page-li-link_pX+1ey\",\"pageLiLink\":\"table_page-li-link_pX+1ey\"};\n    if(module.hot) {\n      // 1721516381732\n      var cssReload = require(\"/home/ed/git/fe-code-challenge/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","// extracted by mini-css-extract-plugin\nexport default {\"form-container\":\"styles-shared_form-container_GfIsAN\",\"formContainer\":\"styles-shared_form-container_GfIsAN\",\"search-container\":\"styles-shared_search-container_LZZB+p\",\"searchContainer\":\"styles-shared_search-container_LZZB+p\",\"text-box\":\"styles-shared_text-box_kpFDMc\",\"textBox\":\"styles-shared_text-box_kpFDMc\",\"dropdown\":\"styles-shared_dropdown_sW3Kam\",\"button\":\"styles-shared_button_95CN65\",\"stars\":\"styles-shared_stars_oS8ogT\"};\n    if(module.hot) {\n      // 1721516381722\n      var cssReload = require(\"/home/ed/git/fe-code-challenge/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  "],"names":["About","React","className","css","readme","href","Image","_ref","height","width","src","role","loading","Menu","navigation","image","logo","ul","Link","to","Loader","isLoading","styles","classNames","_defineProperty","hidden","container","loader","getKey","item","index","concat","toString","Table","props","headData","bodyData","tableClassName","onPageChange","length","tableContainer","map","key","Object","values","value","valueIndex","ReactPaginate","_extends","previousLabel","nextLabel","containerClassName","paginationContainer","activeClassName","paginationLinkActive","pageClassName","pageLi","pageLinkClassName","pageLiLink","previousClassName","previous","nextLinkClassName","nextLink","previousLinkClassName","previousLink","breakClassName","nextClassName","next","breakLinkClassName","HttpVerb","getOptions","request","_request$headers","headers","Headers","method","contentType","acceptLanguage","bodyParams","set","operation","body","JSON","stringify","execute","_x","_execute","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","options","queryParams","response","_context","prev","endpoint","abrupt","URLSearchParams","fetch","sent","ok","errorHandled","Error","statusText","t0","error","stop","parseResponse","_x2","_x3","_parseResponse","_callee2","ajaxState","json","text","data","errors","fullResponse","_context2","parse","_objectSpread","ajaxServerErrors","mapResponse","httpResponse","fetchRequest","_x4","_fetchRequest","_callee4","myFetch","fetchPromise","_context4","_callee3","_context3","rawResponse","ajaxError","cleanState","ContentType","useAjax","setAjaxState","updateState","ajaxActions","onAjaxStateUpdate","state","clearErrors","setLoading","performRequest","useCallback","params","customHeaders","useMemo","get","bind","GET","post","POST","compareCategoriesNames","categoryA","categoryB","designation","categories","filter","category","concealed","sort","professionals","pro","_pro$address","id","name","postCode","address","postcode","reviewRating","rating","onlyNumbersAndLettersRegex","ukPostCodeRegex","initialState","categoryId","isCategoryIdValid","isPostCodeValid","Dropdown","memo","label","onBlur","onSelect","selected","isValid","containerStyles","classnames","dropdownContainer","selectStyles","select","selectNotValid","handleSelect","event","currentTarget","selectedItem","current","find","option","items","unshift","htmlFor","onChange","displayName","TextBox","maxLength","inputStyles","input","inputNotValid","textBoxContainer","Form","onSubmit","validateCategory","validatePostcode","formContainer","preventDefault","dropdown","textBox","button","type","TABLE_HEAD_DATA","Search","_useData","setState","categoryIsValid","postCodeIsValid","_useState","useState","_useState2","_slicedToArray","inputState","setInputState","_useCategories","_useState3","_useState4","setCategories","ajax","Text","getCategories","setTimeout","useEffect","useCategories","categoriesAjaxState","_useProfessionals","professionalsWithPagination","setProfessionalsWithPagination","getProfessionals","location","currentPage","entriesStartValue","_args2","undefined","professionalsResponse","totalPages","Math","floor","resetProfessionals","useProfessionals","professionalsAjaxState","validations","test","prevState","handlers","setCategory","castedCategoryId","parseInt","isNaN","setPostcode","toUpperCase","useStateUpdater","isDataValid","toLowerCase","useData","inputFieldsAreValid","handleSetPostcode","target","handleOnSubmit","handlePageChange","mappedCategories","mappedProsWithReviewRatingComponent","professionalsAux","_toConsumableArray","proAux","_objectWithoutProperties","_excluded","reviewRatingComponent","ReactStars","count","edit","size","round","stars","searchContainer","pageCount","disableInitialCallback","pageRangeDisplayed","marginPagesDisplayed","App","Router","Switch","Route","path","exact","component","ReactDOM","document","getElementById","cssReload","module","hot","dispose"],"sourceRoot":""}